/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class APlusMinusRest extends PPlusMinusRest
{
    private TPlusminusop _plusminusop_;
    private PTimesList _timesList_;

    public APlusMinusRest()
    {
        // Constructor
    }

    public APlusMinusRest(
        @SuppressWarnings("hiding") TPlusminusop _plusminusop_,
        @SuppressWarnings("hiding") PTimesList _timesList_)
    {
        // Constructor
        setPlusminusop(_plusminusop_);

        setTimesList(_timesList_);

    }

    @Override
    public Object clone()
    {
        return new APlusMinusRest(
            cloneNode(this._plusminusop_),
            cloneNode(this._timesList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPlusMinusRest(this);
    }

    public TPlusminusop getPlusminusop()
    {
        return this._plusminusop_;
    }

    public void setPlusminusop(TPlusminusop node)
    {
        if(this._plusminusop_ != null)
        {
            this._plusminusop_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plusminusop_ = node;
    }

    public PTimesList getTimesList()
    {
        return this._timesList_;
    }

    public void setTimesList(PTimesList node)
    {
        if(this._timesList_ != null)
        {
            this._timesList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._timesList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._plusminusop_)
            + toString(this._timesList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._plusminusop_ == child)
        {
            this._plusminusop_ = null;
            return;
        }

        if(this._timesList_ == child)
        {
            this._timesList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._plusminusop_ == oldChild)
        {
            setPlusminusop((TPlusminusop) newChild);
            return;
        }

        if(this._timesList_ == oldChild)
        {
            setTimesList((PTimesList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
