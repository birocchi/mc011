/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import java.util.*;
import analysis.*;

@SuppressWarnings("nls")
public final class AMulExp extends PExp
{
    private final LinkedList<PExp> _factor_ = new LinkedList<PExp>();

    public AMulExp()
    {
        // Constructor
    }

    public AMulExp(
        @SuppressWarnings("hiding") List<PExp> _factor_)
    {
        // Constructor
        setFactor(_factor_);

    }

    @Override
    public Object clone()
    {
        return new AMulExp(
            cloneList(this._factor_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMulExp(this);
    }

    public LinkedList<PExp> getFactor()
    {
        return this._factor_;
    }

    public void setFactor(List<PExp> list)
    {
        this._factor_.clear();
        this._factor_.addAll(list);
        for(PExp e : list)
        {
            if(e.parent() != null)
            {
                e.parent().removeChild(e);
            }

            e.parent(this);
        }
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._factor_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._factor_.remove(child))
        {
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        for(ListIterator<PExp> i = this._factor_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set((PExp) newChild);
                    newChild.parent(this);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

        throw new RuntimeException("Not a child.");
    }
}
