/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ALessThan extends PLessThan
{
    private PPlusMinusList _plusMinusList_;
    private PLessThanPlusMinus _lessThanPlusMinus_;

    public ALessThan()
    {
        // Constructor
    }

    public ALessThan(
        @SuppressWarnings("hiding") PPlusMinusList _plusMinusList_,
        @SuppressWarnings("hiding") PLessThanPlusMinus _lessThanPlusMinus_)
    {
        // Constructor
        setPlusMinusList(_plusMinusList_);

        setLessThanPlusMinus(_lessThanPlusMinus_);

    }

    @Override
    public Object clone()
    {
        return new ALessThan(
            cloneNode(this._plusMinusList_),
            cloneNode(this._lessThanPlusMinus_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseALessThan(this);
    }

    public PPlusMinusList getPlusMinusList()
    {
        return this._plusMinusList_;
    }

    public void setPlusMinusList(PPlusMinusList node)
    {
        if(this._plusMinusList_ != null)
        {
            this._plusMinusList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._plusMinusList_ = node;
    }

    public PLessThanPlusMinus getLessThanPlusMinus()
    {
        return this._lessThanPlusMinus_;
    }

    public void setLessThanPlusMinus(PLessThanPlusMinus node)
    {
        if(this._lessThanPlusMinus_ != null)
        {
            this._lessThanPlusMinus_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lessThanPlusMinus_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._plusMinusList_)
            + toString(this._lessThanPlusMinus_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._plusMinusList_ == child)
        {
            this._plusMinusList_ = null;
            return;
        }

        if(this._lessThanPlusMinus_ == child)
        {
            this._lessThanPlusMinus_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._plusMinusList_ == oldChild)
        {
            setPlusMinusList((PPlusMinusList) newChild);
            return;
        }

        if(this._lessThanPlusMinus_ == oldChild)
        {
            setLessThanPlusMinus((PLessThanPlusMinus) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
