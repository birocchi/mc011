/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import java.util.*;
import node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAProgram(AProgram node)
    {
        defaultCase(node);
    }

    public void caseAMainclass(AMainclass node)
    {
        defaultCase(node);
    }

    public void caseAMainmethod(AMainmethod node)
    {
        defaultCase(node);
    }

    public void caseASimpleclassClassdecl(ASimpleclassClassdecl node)
    {
        defaultCase(node);
    }

    public void caseAExtendingclassClassdecl(AExtendingclassClassdecl node)
    {
        defaultCase(node);
    }

    public void caseAVardecl(AVardecl node)
    {
        defaultCase(node);
    }

    public void caseAMethoddecl(AMethoddecl node)
    {
        defaultCase(node);
    }

    public void caseAFirstparameterParamlist(AFirstparameterParamlist node)
    {
        defaultCase(node);
    }

    public void caseAEmptyParamlist(AEmptyParamlist node)
    {
        defaultCase(node);
    }

    public void caseAAnotherparameterParamrest(AAnotherparameterParamrest node)
    {
        defaultCase(node);
    }

    public void caseAIntvectorType(AIntvectorType node)
    {
        defaultCase(node);
    }

    public void caseABooleanType(ABooleanType node)
    {
        defaultCase(node);
    }

    public void caseAIntType(AIntType node)
    {
        defaultCase(node);
    }

    public void caseAIdType(AIdType node)
    {
        defaultCase(node);
    }

    public void caseAStatementsStatement(AStatementsStatement node)
    {
        defaultCase(node);
    }

    public void caseAIfelseStatement(AIfelseStatement node)
    {
        defaultCase(node);
    }

    public void caseAWhileStatement(AWhileStatement node)
    {
        defaultCase(node);
    }

    public void caseAPrintStatement(APrintStatement node)
    {
        defaultCase(node);
    }

    public void caseAAttrStatement(AAttrStatement node)
    {
        defaultCase(node);
    }

    public void caseAArrayattrStatement(AArrayattrStatement node)
    {
        defaultCase(node);
    }

    public void caseAExp(AExp node)
    {
        defaultCase(node);
    }

    public void caseAAndstmList(AAndstmList node)
    {
        defaultCase(node);
    }

    public void caseAAndstmRest(AAndstmRest node)
    {
        defaultCase(node);
    }

    public void caseALessThan(ALessThan node)
    {
        defaultCase(node);
    }

    public void caseALessThanPlusMinus(ALessThanPlusMinus node)
    {
        defaultCase(node);
    }

    public void caseAPlusMinusList(APlusMinusList node)
    {
        defaultCase(node);
    }

    public void caseAPlusMinusRest(APlusMinusRest node)
    {
        defaultCase(node);
    }

    public void caseATimesList(ATimesList node)
    {
        defaultCase(node);
    }

    public void caseATimesRest(ATimesRest node)
    {
        defaultCase(node);
    }

    public void caseANotExpressionPrefixexp(ANotExpressionPrefixexp node)
    {
        defaultCase(node);
    }

    public void caseAExpressionPrefixexp(AExpressionPrefixexp node)
    {
        defaultCase(node);
    }

    public void caseANotexp(ANotexp node)
    {
        defaultCase(node);
    }

    public void caseAPostfixexpList(APostfixexpList node)
    {
        defaultCase(node);
    }

    public void caseAIndexPostfixexpRest(AIndexPostfixexpRest node)
    {
        defaultCase(node);
    }

    public void caseAIdlistPostfixexpRest(AIdlistPostfixexpRest node)
    {
        defaultCase(node);
    }

    public void caseALengthPostfixexpRest(ALengthPostfixexpRest node)
    {
        defaultCase(node);
    }

    public void caseANumberPrimaryExp(ANumberPrimaryExp node)
    {
        defaultCase(node);
    }

    public void caseATruePrimaryExp(ATruePrimaryExp node)
    {
        defaultCase(node);
    }

    public void caseAFalsePrimaryExp(AFalsePrimaryExp node)
    {
        defaultCase(node);
    }

    public void caseAIdPrimaryExp(AIdPrimaryExp node)
    {
        defaultCase(node);
    }

    public void caseAThisPrimaryExp(AThisPrimaryExp node)
    {
        defaultCase(node);
    }

    public void caseANewintPrimaryExp(ANewintPrimaryExp node)
    {
        defaultCase(node);
    }

    public void caseANewidPrimaryExp(ANewidPrimaryExp node)
    {
        defaultCase(node);
    }

    public void caseALparexprparPrimaryExp(ALparexprparPrimaryExp node)
    {
        defaultCase(node);
    }

    public void caseAExplistheadExplist(AExplistheadExplist node)
    {
        defaultCase(node);
    }

    public void caseABlankExplist(ABlankExplist node)
    {
        defaultCase(node);
    }

    public void caseAExprest(AExprest node)
    {
        defaultCase(node);
    }

    public void caseTClassn(TClassn node)
    {
        defaultCase(node);
    }

    public void caseTExtends(TExtends node)
    {
        defaultCase(node);
    }

    public void caseTPublic(TPublic node)
    {
        defaultCase(node);
    }

    public void caseTStatic(TStatic node)
    {
        defaultCase(node);
    }

    public void caseTVoid(TVoid node)
    {
        defaultCase(node);
    }

    public void caseTMain(TMain node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseTInt(TInt node)
    {
        defaultCase(node);
    }

    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTLength(TLength node)
    {
        defaultCase(node);
    }

    public void caseTNew(TNew node)
    {
        defaultCase(node);
    }

    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    public void caseTReturn(TReturn node)
    {
        defaultCase(node);
    }

    public void caseTThis(TThis node)
    {
        defaultCase(node);
    }

    public void caseTId(TId node)
    {
        defaultCase(node);
    }

    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    public void caseTPlusminusop(TPlusminusop node)
    {
        defaultCase(node);
    }

    public void caseTTimesop(TTimesop node)
    {
        defaultCase(node);
    }

    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    public void caseTLess(TLess node)
    {
        defaultCase(node);
    }

    public void caseTEqual(TEqual node)
    {
        defaultCase(node);
    }

    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTLParenthese(TLParenthese node)
    {
        defaultCase(node);
    }

    public void caseTRParenthese(TRParenthese node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTSemicolon(TSemicolon node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTPrint(TPrint node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
