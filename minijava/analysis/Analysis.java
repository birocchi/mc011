/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseStart(Start node);
    void caseAProgram(AProgram node);
    void caseAMainclass(AMainclass node);
    void caseAMainmethod(AMainmethod node);
    void caseASimpleclassClassdecl(ASimpleclassClassdecl node);
    void caseAExtendingclassClassdecl(AExtendingclassClassdecl node);
    void caseAVardecl(AVardecl node);
    void caseAMethoddecl(AMethoddecl node);
    void caseAFirstparameterParamlist(AFirstparameterParamlist node);
    void caseAEmptyParamlist(AEmptyParamlist node);
    void caseAAnotherparameterParamrest(AAnotherparameterParamrest node);
    void caseAIntvectorType(AIntvectorType node);
    void caseABooleanType(ABooleanType node);
    void caseAIntType(AIntType node);
    void caseAIdType(AIdType node);
    void caseAStatementsStatement(AStatementsStatement node);
    void caseAIfelseStatement(AIfelseStatement node);
    void caseAWhileStatement(AWhileStatement node);
    void caseAPrintStatement(APrintStatement node);
    void caseAAttrStatement(AAttrStatement node);
    void caseAArrayattrStatement(AArrayattrStatement node);
    void caseAExp(AExp node);
    void caseAAndstmList(AAndstmList node);
    void caseAAndstmRest(AAndstmRest node);
    void caseALessThan(ALessThan node);
    void caseALessThanPlusMinus(ALessThanPlusMinus node);
    void caseAPlusMinusList(APlusMinusList node);
    void caseAPlusMinusRest(APlusMinusRest node);
    void caseATimesList(ATimesList node);
    void caseATimesRest(ATimesRest node);
    void caseANotExpressionPrefixexp(ANotExpressionPrefixexp node);
    void caseAExpressionPrefixexp(AExpressionPrefixexp node);
    void caseANotexp(ANotexp node);
    void caseAPostfixexpList(APostfixexpList node);
    void caseAIndexPostfixexpRest(AIndexPostfixexpRest node);
    void caseAIdlistPostfixexpRest(AIdlistPostfixexpRest node);
    void caseALengthPostfixexpRest(ALengthPostfixexpRest node);
    void caseANumberPrimaryExp(ANumberPrimaryExp node);
    void caseATruePrimaryExp(ATruePrimaryExp node);
    void caseAFalsePrimaryExp(AFalsePrimaryExp node);
    void caseAIdPrimaryExp(AIdPrimaryExp node);
    void caseAThisPrimaryExp(AThisPrimaryExp node);
    void caseANewintPrimaryExp(ANewintPrimaryExp node);
    void caseANewidPrimaryExp(ANewidPrimaryExp node);
    void caseALparexprparPrimaryExp(ALparexprparPrimaryExp node);
    void caseAExplistheadExplist(AExplistheadExplist node);
    void caseABlankExplist(ABlankExplist node);
    void caseAExprest(AExprest node);

    void caseTClassn(TClassn node);
    void caseTExtends(TExtends node);
    void caseTPublic(TPublic node);
    void caseTStatic(TStatic node);
    void caseTVoid(TVoid node);
    void caseTMain(TMain node);
    void caseTString(TString node);
    void caseTInt(TInt node);
    void caseTBoolean(TBoolean node);
    void caseTIf(TIf node);
    void caseTElse(TElse node);
    void caseTWhile(TWhile node);
    void caseTLength(TLength node);
    void caseTNew(TNew node);
    void caseTTrue(TTrue node);
    void caseTFalse(TFalse node);
    void caseTReturn(TReturn node);
    void caseTThis(TThis node);
    void caseTId(TId node);
    void caseTNumber(TNumber node);
    void caseTPlusminusop(TPlusminusop node);
    void caseTTimesop(TTimesop node);
    void caseTAnd(TAnd node);
    void caseTLess(TLess node);
    void caseTEqual(TEqual node);
    void caseTNot(TNot node);
    void caseTLBracket(TLBracket node);
    void caseTRBracket(TRBracket node);
    void caseTLBrace(TLBrace node);
    void caseTRBrace(TRBrace node);
    void caseTLParenthese(TLParenthese node);
    void caseTRParenthese(TRParenthese node);
    void caseTDot(TDot node);
    void caseTSemicolon(TSemicolon node);
    void caseTComma(TComma node);
    void caseTBlank(TBlank node);
    void caseTPrint(TPrint node);
    void caseEOF(EOF node);
}
